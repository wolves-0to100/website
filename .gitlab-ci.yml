# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
default:
  image: node:lts
before_script:
  - apt-get update -qq
  - apt-get install -qq git
  # Setup SSH deploy keys
  - "which ssh-agent || ( apt-get install -qq openssh-client )"
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH_PRIVATE_KEY")
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
stages:
- build
- deploy-stage
- deploy-prod
- lhci
- test
cache:
  paths:
  - node_modules/
build:
  stage: build
  only:
  - master
  script:
  - npm install
  - npm run generate
  artifacts:
    paths:
    - dist/
deploy-stage:
  stage: deploy
  only:
  - develop
  script:
  - echo "Deploying to Stage"
  - ssh $SHH_USER:$SSH_SERVER "cd /srv/staging.0to100.ink/ && git pull && npm i && npm run build"
deploy-prod:
  stage: deploy
  only:
  - master
  script:
  - echo "Deploying to Prod"
  - ssh $SHH_USER:$SSH_SERVER "cd /srv/0to100.ink/ && git pull && npm i && npm run build"
lhci:
  stage: lhci
  image: cypress/browsers:node12.6.0-chrome77
  only:
  - master
  script:
  - npm install -g @lhci/cli@0.3.x
  - lhci autorun --upload.target=temporary-public-storage --collect.settings.chromeFlags="--no-sandbox"
    --collect.url=https://0to100.ink || echo "LHCI failed!"
sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
